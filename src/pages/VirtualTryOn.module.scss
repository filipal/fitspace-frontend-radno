@use '../styles' as s;

$design-w: 430; // baseline širina dizajna

@function cqw($px, $base: $design-w) {
  @return calc((#{$px} / #{$base}) * 100cqw);
}
@function fsz($n, $minFactor: .85) {
  @return clamp(#{$n * $minFactor}px, cqw(#{$n}), #{$n}px);
}

.page {
  /* Omogući container queries i skaliranje po širini stranice */
  container-type: inline-size;
  display: flex;
  flex-direction: column;
  align-items: center;
  color: #000;
  min-height: 100dvh;
  width: 100%;
  max-width: 430px;
  box-sizing: border-box;
  margin: 0 auto;
}

.avatarButton {
  background: none;
  border: none;
  padding: 0;
  width: min(30px, cqw(30));
  height: min(25px, cqw(25));
  display: flex;
  align-items: center;
  justify-content: center;
}
.avatarButton img { width: 100%; height: 100%; object-fit: contain; }

.canvasWrapper {
  width: 100%;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  /* Visina platna skalirana po širini stranice: 932 - 101 - 51 = 780 */
  height: cqw(780);
}
.canvasWrapper.withAccordion { height: cqw(600); }
.canvasWrapper.footerTopExpanded, .canvasWrapper.footerBotExpanded { height: cqw(730); }
.canvasWrapper.footerTopExpanded.withAccordion, .canvasWrapper.footerBotExpanded.withAccordion { height: cqw(550); }

.avatarImage { width: 100%; height: 100%; object-fit: cover; }

/* Match UnrealMeasurements positioning: total usable width 410px; buttons anchored via margins */
.controlGroup {
  position: absolute;
  bottom: cqw(10);
  left: 50%;
  transform: translateX(-50%);
  width: cqw(410);
  height: cqw(60);
  display: flex;
  align-items: flex-end;
}

/* Floating side buttons */
.topBotFloating, .animationFloating, .heatMapFloating {
  position: absolute;
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}
.topBotFloating { top: cqw(18); left: cqw(15); width: cqw(60); height: cqw(44); }
.topBotFloating.cartVariant { width: cqw(32); height: cqw(41); left: cqw(24); }
.topBotFloating.fullBodyVariant { width: cqw(41); height: cqw(44); left: cqw(24); }
.animationFloating { top: cqw(18); right: cqw(21); width: cqw(48); height: cqw(44); }
.heatMapFloating { top: cqw(79); right: cqw(21); width: cqw(48); height: cqw(44); }
.topBotFloating img, .animationFloating img, .heatMapFloating img { width: 100%; height: 100%; object-fit: contain; }

/* Category selectors (arrows + text) */
.categoryArrows {
  position: absolute;
  width: cqw(33);
  height: cqw(150);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  /* Center relative to text group (left:16, text width:57, arrow width:33) => 16 + (57-33)/2 = 28 */
  left: calc(#{cqw(16)} + (#{cqw(57)} - #{cqw(33)}) / 2);
}
.categoryArrowsFirst { top: cqw(230); }
.categoryArrowsSecond { top: cqw(450); }
.categoryArrowBtn {
  width: cqw(32.8);
  height: cqw(24);
  padding: 0;
  border: none;
  background: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}
.categoryArrowBtn img { width: 100%; height: 100%; object-fit: contain; }

/* Text group is a separate absolutely positioned block (57x71) centered relative to the arrow column width via left offset calc */
.categoryTextGroup {
  position: absolute;
  width: cqw(57);
  height: cqw(71);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  left: cqw(16); /* requested left margin from canvasWrapper */
}
/* Vertically align centers with arrow group: place so that text group's vertical center matches arrow group's vertical center */
.categoryTextGroupFirst { top: calc(#{cqw(230)} + (#{cqw(150)} / 2) - (#{cqw(71)} / 2)); }
.categoryTextGroupSecond { top: calc(#{cqw(450)} + (#{cqw(150)} / 2) - (#{cqw(71)} / 2)); }

/* Compact variant when top expanded footer active (height 138, inner 59) */
.categoryArrowsCompact { height: cqw(138); }
.categoryTextGroupCompact { height: cqw(59); top: calc(#{cqw(230)} + (#{cqw(138)} / 2) - (#{cqw(59)} / 2)); }

/* Size selector (right side when top expanded) */
.sizeArrows {
  position: absolute;
  width: cqw(33); /* match arrow column width */
  height: cqw(150);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  right: calc(#{cqw(20)} + #{cqw(25)} - #{cqw(16.5)}); /* align with previous imageArrows center */
}
.sizeArrowsFirst { top: cqw(230); }
.sizeDisplay {
  width: cqw(24.14);
  height: cqw(82.86);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
}
.sizeSmall {
  width: cqw(12.7);
  height: cqw(25.86);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: fsz(15);
  font-weight: 400;
  line-height: 1;
  opacity: 0.25;
}
.sizeMain {
  width: cqw(24.14);
  height: cqw(34.48);
  display: flex;
  align-items: center;
  font-size: fsz(30);
  font-weight: 400;
  line-height: 1;
}

/* Bottom detailed (waist/length) size display */
.sizeDisplayBottom {
  width: cqw(50);
  height: cqw(86); /* 26 + 34 + 26 */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
}
.sizeSmallBottom {
  width: cqw(50);
  height: cqw(26);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: fsz(10);
  font-weight: 400;
  line-height: 1.05;
  opacity: 0.25;
  text-align: center;
}
.sizeMainBottom {
  width: cqw(50);
  height: cqw(34);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: fsz(17);
  font-weight: 400;
  line-height: 1.05;
  text-align: center;
}

/* Full body simplified mode */
.fullBodyCategory {
  position: absolute;
  top: cqw(310); /* specified */
  left: cqw(16); /* align with earlier text group base left */
  width: cqw(57);
  height: cqw(71); /* match normal text group height */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
}
.fullBodyImageArrows {
  position: absolute;
  top: cqw(310); /* same vertical alignment */
  right: calc(#{cqw(20)} + #{cqw(25)} - #{cqw(16.5)}); /* reuse centering logic of first imageArrows */
  width: cqw(33);
  height: cqw(150);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
}
/* Full body specific arrow & text alignment (reuse existing patterns with new top) */
.categoryArrowsFullBody { top: cqw(310); }
.categoryTextGroupFullBody { top: calc(#{cqw(310)} + (#{cqw(150)} / 2) - (#{cqw(71)} / 2)); }
.imageArrowsFullBody { top: cqw(310); }
.imageDisplayFullBody { top: calc(#{cqw(310)} + (#{cqw(150)} / 2) - (#{cqw(50)} / 2)); }

/* Full body footer layout */
.footerFullBody {
  height: cqw(51);
  display: flex;
  align-items: center;
  position: relative;
  background: #ececec !important;
}
.footerFullBodyTitle {
  position: absolute;
  left: cqw(22);
  top: 50%;
  transform: translateY(-50%);
  width: cqw(224);
  font-size: fsz(13);
  font-weight: 300;
  display: flex;
  align-items: center;
  white-space: nowrap;
  height: auto;
}
.footerFullBodyLabel {
  position: absolute;
  right: cqw(37); /* per spec offset from right */
  top: 50%;
  transform: translateY(-50%);
  width: cqw(108);
  font-size: fsz(20);
  font-weight: 400;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  height: auto;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.categoryTextTop, .categoryTextBottom {
  width: cqw(57);
  height: cqw(13);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: fsz(10);
  font-weight: 400;
  line-height: 1;
  opacity: 0.25;
  text-align: center;
}
.categoryTextMain {
  width: cqw(57);
  height: cqw(21);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: fsz(17);
  font-weight: 400;
  line-height: 1;
  text-align: center;
}

/* Right side image selectors */
.imageArrows {
  position: absolute;
  width: cqw(33);
  height: cqw(150);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  /* Center relative to image display (right:20 with display width 50) => arrow center aligns to image center.
     Image block right:20px, width:50 => image center from right edge = 20 + 25. Arrow width 33 => need arrow left so its center matches: right offset = 20 + (50/2) - (33/2) = 20 + 25 - 16.5 = 28.5px */
  right: calc(#{cqw(20)} + #{cqw(25)} - #{cqw(16.5)});
}
.imageArrowsFirst { top: cqw(230); }
.imageArrowsSecond { top: cqw(450); }

.imageDisplay {
  position: absolute;
  width: cqw(50);
  height: cqw(50);
  right: cqw(20); /* requested 20px from right margin */
  display: flex;
  align-items: center;
  justify-content: center;
}
.imageDisplay img { width: 100%; height: 100%; object-fit: contain; }
.imageDisplayFirst { top: calc(#{cqw(230)} + (#{cqw(150)} / 2) - (#{cqw(50)} / 2)); }
.imageDisplaySecond { top: calc(#{cqw(450)} + (#{cqw(150)} / 2) - (#{cqw(50)} / 2)); }

.controlButton {
  position: relative;
  border: none;
  padding: 0;
  background: none;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: all 0.2s ease;
}

.controlButton.selected {
  color: #000;
}

/* controlIcon final z-index layered above circles */
/* Vanjski krug samo obrub: bijeli default, crni kad je selektiran */
/* Generic outer circle (rotate buttons keep old behavior) */
.outerCircle {
  position: absolute;
  inset: 0;
  border-radius: 50%;
  border: cqw(2) solid #FFFFFF;
  background: transparent;
  box-sizing: border-box;
  transition: border-color .25s ease;
  z-index: 1;
  pointer-events: none;
}
/* outerCircle remains white always (rotate buttons). */

/* New two-layer structure for top/bottom zoom buttons */
.selectionRing {
  position: absolute;
  inset: 0;
  border-radius: 50%;
  border: 2px solid transparent; /* transparent ring until selected */
  box-sizing: border-box;
  z-index: 2; /* sits above ring space but below inner white circle */
  pointer-events: none;
}
.controlButton.selected .selectionRing { border-color: #000; }

.innerCircle {
  position: absolute;
  inset: 4px; /* creates visible outer ring gap */
  border-radius: 50%;
  background: #FFFFFF; /* always white, regardless of selection */
  z-index: 3;
  pointer-events: none;
}.fillCircle {
  position: absolute;
  inset: 4px; /* same inset gap as zoom buttons for visual consistency */
  border-radius: 50%;
  background: #FFFFFF;
  z-index: 0; /* under outer border */
  pointer-events: none;
}
.controlIcon { width: 100%; height: 100%; object-fit: contain; position: relative; z-index: 4; }
/* Ikone ostaju crne (ako koriste currentColor) */
.controlButton, .controlButton.selected { color: #000; }

.footer {
  width: 100%;
  height: cqw(51);
  display: flex;
  margin: 0;
  border-top: 1px solid #000;
  padding: 0;
}
.footer.expandedTop, .footer.expandedBot {
  height: cqw(101);
  flex-direction: row;
  align-items: flex-start;
  position: relative;
  background: #ececec;
}
.footer.expandedTop::before, .footer.expandedBot::before {
  content: '';
}
.accordionArea { width: 100%; height: cqw(180); flex: 0 0 auto; }
.footerLeft, .footerRight {
  width: cqw(215);
  height: cqw(51);
  position: relative;
  background: #fff;
  display: flex;
  flex-direction: column;
  justify-content: center;
  box-sizing: border-box;
}
.footer.expandedTop .footerLeft,
.footer.expandedTop .footerRight,
.footer.expandedBot .footerLeft,
.footer.expandedBot .footerRight {
  height: cqw(101);
  background: #ececec;
}
.footerLeft { border-right: 1px solid #000; }

/* Ako imaš header koji treba biti svijetao kad je expanded, dodaj ovo: */
.appHeader {
  background: #ececec !important;
}
.titleBox, .infoBox {
  position: absolute;
  width: cqw(131);
  height: cqw(26);
  top: cqw(16); /* vertically centered: (51-19)/2 = 16 */
  font-size: fsz(13);
  font-weight: 300;
  text-transform: uppercase;
  line-height: 1.05;
  display: flex;
  flex-direction: column;
  justify-content: center;
  color: #000;
}
.titleBox { left: cqw(9); text-align: left; }
.infoBox { right: cqw(9); text-align: right; }
.footerButton {
  position: absolute;
  width: cqw(60);
  height: cqw(23);
  top: cqw(16);
  font-size: fsz(20);
  font-weight: 400;
  background: none;
  border: none;
  cursor: pointer;
  line-height: 1;
  display: flex;
  align-items: center;
  justify-content: center;
}
.topButton { right: cqw(15); }
.botButton { left: cqw(15); }

/* ========== Expanded TOP footer layout (option selector + color selector) ========== */
.topExpandedLeft {
  position: absolute;
  top: 0;
  left: cqw(30); /* requested left offset */
  height: cqw(101);
  display: flex;
  align-items: center; /* vertically center the block */
}
.topExpandedLeftInner {
  width: cqw(120);
  height: cqw(31);
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.topExpandedArrowsBtn {
  width: cqw(22);
  height: cqw(30);
  border: none;
  background: none;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}
.topExpandedTextBlock {
  flex: 1;
  height: cqw(30);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  line-height: 1;
}
.topExpandedMain { font-size: fsz(16); font-weight: 400; }
.topExpandedSub { font-size: fsz(10); font-weight: 300; }

/* Right side color circles */
.topExpandedRight {
  position: absolute;
  top: 0;
  right: cqw(30); /* requested right offset */
  height: cqw(101);
  display: flex;
  align-items: center;
}
.topExpandedColorsInner {
  width: cqw(190); /* widened from 190 to accommodate 13 + 10 + 10 + 13 spacing with element sizes */
  height: cqw(30);
  display: flex;
  align-items: center;
  justify-content: center; /* center the colorCircles block */
}
.colorArrowBtn { @extend .topExpandedArrowsBtn; }
.colorCircles { width: cqw(119); display: flex; align-items: center; justify-content: space-between; margin:0 cqw(13); }
.colorCircleBtnWrapper { background: none; border: none; padding: 0; cursor: pointer; display: flex; }


/* Canvas zoom states for top/bottom accordions */
.canvasWrapper.topZoom .avatarImage {
  object-fit: cover;
  object-position: top center;
  transform: scale(1.2);
  transform-origin: top center;
}
.canvasWrapper.bottomZoom .avatarImage {
  object-fit: cover;
  object-position: bottom center;
  transform: scale(1.23);
  transform-origin: bottom center;
}
/* Full body detailed (accordion open, show full avatar) */
.canvasWrapper.fullBodyDetail .avatarImage {
  object-fit: contain;
  transform: none;
}

/* Control group layout when accordion open */
/* Expanded state handled inline; no extra class needed */

.homeButtonCircle {
  position: relative;
  width: cqw(40);
  height: cqw(40);
  border: none;
  background: none;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}